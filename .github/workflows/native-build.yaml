name: Build Native CLI

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest, macos-13]
    steps:
      - uses: actions/checkout@v4

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '23'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'

      - name: Build native image
        run: ./mvnw clean package -Pnative -DskipTests

      - name: Set short OS name
        id: osname
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            echo "os=ubuntu" >> $GITHUB_OUTPUT
          elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            echo "os=windows" >> $GITHUB_OUTPUT
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            echo "os=macos-arm" >> $GITHUB_OUTPUT
          elif [[ "${{ matrix.os }}" == "macos-13" ]]; then
            echo "os=macos-x64" >> $GITHUB_OUTPUT
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: amvera-${{ steps.osname.outputs.os }}
          path:  ${{ startsWith(matrix.os, 'windows') && 'target/amvera.exe' || 'target/amvera' }}