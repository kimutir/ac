name: Build Native CLI

on:
  push:
    tags:
      - 'v*'

jobs:
  build-native:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [x64, aarch64]
        exclude:
          - os: windows-latest
            arch: aarch64 # Windows ARM не поддерживается GitHub Actions
          - os: macos-latest
            arch: x64    # macOS ARM можно оставить только aarch64, или подогнать вручную

    name: Build on ${{ matrix.os }} (${{ matrix.arch }})

    steps:
      - uses: actions/checkout@v4

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GH_RELEASE_TOKEN }}
          architecture: ${{ matrix.arch }}
          native-image: true

      - name: Set up Maven
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: maven

      - name: Build native image
        run: ./mvnw clean package -Pnative -DskipTests

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: amvera-${{ matrix.os }}-${{ matrix.arch }}
          path: target/amvera

#  create-release:
#    name: Create GitHub Release
#    needs: build-native
#    runs-on: ubuntu-latest
#    steps:
#      - name: Download all artifacts
#        uses: actions/download-artifact@v4
#        with:
#          path: artifacts
#
#      - name: List files
#        run: ls -R artifacts
#
#      - name: Zip all artifacts
#        run: |
#          cd artifacts
#          for dir in *; do
#            zip -r "$dir.zip" "$dir"
#          done
#          cd ..
#
#      - name: Create GitHub Release
#        uses: softprops/action-gh-release@v2
#        with:
#          files: artifacts/*.zip
#        env:
#          GITHUB_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}