name: Build Native CLI

on:
  push:
    tags:
      - 'v*'

jobs:
  build-native:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [x64, aarch64]
        exclude:
          - os: windows-latest
            arch: aarch64
          - os: macos-latest
            arch: x64

    name: Build on ${{ matrix.os }} (${{ matrix.arch }})

    steps:
      - uses: actions/checkout@v4

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GH_RELEASE_TOKEN }}
          architecture: ${{ matrix.arch }}
          native-image: true

      - name: Set up Maven
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: maven

      - name: Build native image
        run: ./mvnw clean package -Pnative -DskipTests

      - name: Set short OS name
        id: osname
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            echo "os=ubuntu" >> $GITHUB_OUTPUT
          elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            echo "os=windows" >> $GITHUB_OUTPUT
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            echo "os=macos" >> $GITHUB_OUTPUT
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: amvera-${{ steps.osname.outputs.os }}-${{ matrix.arch }}
          path: target/amvera